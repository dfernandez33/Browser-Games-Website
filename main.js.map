{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/games/snake/classes/coordinate.ts","webpack:///./src/app/games/snake/classes/food.ts","webpack:///./src/app/games/snake/classes/hamemrConfig.ts","webpack:///./src/app/games/snake/classes/snake.ts","webpack:///./src/app/games/snake/enums/direction.enum.ts","webpack:///./src/app/games/snake/enums/state.enum.ts","webpack:///./src/app/games/snake/snake.component.css","webpack:///./src/app/games/snake/snake.component.html","webpack:///./src/app/games/snake/snake.component.ts","webpack:///./src/app/shared-bootstrap-module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n<app-snake></app-snake>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  private p5;\r\n\r\n  constructor(){}\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SnakeComponent } from './games/snake/snake.component';\r\n\r\nimport { SharedBootstrapModule } from './shared-bootstrap-module';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\n\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SnakeComponent,\r\n    NavBarComponent\r\n  ],\r\n  imports: [\r\n    SharedBootstrapModule,\r\n    BrowserModule,\r\n    AngularFontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".navbar {\\r\\n    background-color: #0A4A81;\\r\\n}\\r\\n\\r\\n.navbar-toggler {\\r\\n    background-color: #5F6760;\\r\\n}\\r\\n\\r\\n.navbar-brand {\\r\\n    color: #5F6760;\\r\\n    font-size: xx-large;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Game Corner <fa name=\\\"gamepad\\\" size=\\\"lg\\\"></fa></a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" \\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleNavBar()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    \\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\"\\r\\n        [ngClass]=\\\"{ 'show': navbarOpen }\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            Dropdown\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n            <div class=\\\"dropdown-divider\\\"></div>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n            </div>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\r\\n        </li>\\r\\n        </ul>\\r\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\r\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  navbarOpen: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  toggleNavBar() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n\r\n}\r\n","export class Coordinate {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","import { Snake } from \"./snake\";\r\nimport { Coordinate } from \"./coordinate\";\r\n\r\nexport class Food {\r\n    \r\n    //instance or p5 object\r\n    p: any;\r\n\r\n    coordinates: Coordinate;\r\n\r\n    scale: number = 20;\r\n\r\n    FOOD_COLOR: string = '#FC050B';\r\n\r\n    constructor(p: any) {\r\n        this.p = p;\r\n        this.reposition();\r\n    }\r\n\r\n    drawFood() {\r\n        this.p.fill(this.FOOD_COLOR);\r\n        this.p.rect(this.coordinates.x, this.coordinates.y, this.scale, this.scale);\r\n    }\r\n\r\n    reposition() {\r\n        let columns = Math.floor(this.p.width/this.scale);\r\n        let rows = Math.floor((this.p.height)/this.scale);\r\n        this.coordinates  = new Coordinate(Math.floor(this.p.random(columns)),\r\n                                            Math.floor(this.p.random(rows)));\r\n        this.coordinates.x *= this.scale;\r\n        this.coordinates.y *= this.scale;\r\n        if (this.coordinates.y < 40) {\r\n            this.coordinates.y += 40;\r\n        }\r\n    }\r\n}\r\n","import * as Hammer from 'hammerjs';\r\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\n\r\nexport class MyHammerConfig extends HammerGestureConfig  {\r\n  overrides = <any>{\r\n      // override hammerjs default configuration\r\n      'swipe': { direction: Hammer.DIRECTION_ALL  }\r\n  }\r\n}","import { Direction } from \"../enums/direction.enum\";\r\nimport { Direct } from \"protractor/built/driverProviders\";\r\nimport { Coordinate } from \"./coordinate\";\r\n\r\nexport class Snake {\r\n\r\n    //instance of p5 object\r\n    p: any;\r\n    \r\n    head: Coordinate;\r\n\r\n    tail: Coordinate[] = [];\r\n\r\n    scale: number = 20;\r\n\r\n    velocity: number = 1;\r\n    \r\n    direction: Direction;\r\n\r\n    //length of the snake's tail. Initialized to one because of head\r\n    size: number = 0;\r\n\r\n    SNAKE_COLOR: string = '#0CE900';\r\n\r\n    constructor(p: any) {\r\n        this.p = p;\r\n        let columns = Math.floor(this.p.width/this.scale);\r\n        let rows = Math.floor((this.p.height)/this.scale);\r\n        this.head  = new Coordinate(Math.floor(this.p.random(columns)),\r\n                                            Math.floor(this.p.random(rows)));\r\n        this.head.x *= this.scale;\r\n        this.head.y *= this.scale;\r\n        this.direction = null;\r\n    }\r\n\r\n    drawSnake() {\r\n        this.p.fill(this.SNAKE_COLOR);\r\n        this.tail.forEach(\r\n            (part: Coordinate) => {\r\n                this.p.rect(part.x, part.y, this.scale, this.scale);\r\n            } \r\n        );\r\n        this.p.rect(this.head.x, this.head.y, this.scale, this.scale);\r\n    }\r\n\r\n    eatFood() {\r\n        this.size++;\r\n    }\r\n\r\n}\r\n","export enum Direction {\r\n    UP = 8, \r\n    DOWN = 16, \r\n    LEFT = 2, \r\n    RIGHT = 4\r\n}\r\n","export enum State {\r\n    START,\r\n    PLAYING\r\n}\r\n","module.exports = \".card {\\r\\n    margin-bottom: 5%;\\r\\n    margin-top: 5%;\\r\\n    width:50%; \\r\\n    margin-left: 25%; \\r\\n    margin-right: 25%\\r\\n}\"","module.exports = \"<div class=\\\"card text-left\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n      <h4 class=\\\"card-title\\\">Snake</h4>\\r\\n      <p class=\\\"card-text\\\">Simple game of snake made with p5.js</p>\\r\\n      <div id=\\\"gameContainer\\\" #gameContainer></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\r\nimport 'p5'\r\nimport { RecursiveTemplateAstVisitor } from '@angular/compiler';\r\nimport { Snake } from './classes/snake';\r\nimport { Food } from './classes/food';\r\nimport { Direction } from './enums/direction.enum';\r\nimport { Coordinate } from './classes/coordinate';\r\nimport { State } from './enums/state.enum';\r\nimport { MyHammerConfig } from './classes/hamemrConfig';\r\n\r\n\r\n@Component({\r\n  selector: 'app-snake',\r\n  templateUrl: './snake.component.html',\r\n  styleUrls: ['./snake.component.css']\r\n})\r\nexport class SnakeComponent implements AfterViewInit {\r\n\r\n  //instance of p5 object\r\n  private p5;\r\n  private width: number;\r\n\r\n  constructor() { }\r\n\r\n  ngAfterViewInit() {\r\n    this.createCanvas();\r\n  }\r\n  \r\n  private createCanvas() {\r\n    this.p5 = new p5(this.sketch);\r\n  }\r\n  \r\n  //this is where all the game functionality happens\r\n  private sketch(p: any) {\r\n    //anything declared here can be accessed in helper functions.\r\n    //Use this space for \"global\" variables.\r\n\r\n    let width: number;\r\n    let height: number;\r\n\r\n    let snake: Snake;\r\n    let food: Food;\r\n\r\n    let state: State;\r\n\r\n    //set up hammer.js instance to detect touch events\r\n    let hammerConfig = new MyHammerConfig();\r\n    let hammer = hammerConfig.buildHammer(document.getElementById('gameContainer'));\r\n\r\n    p.setup = () => {\r\n      state = State.START;\r\n      width = document.getElementById('gameContainer').offsetWidth;\r\n      height = width;\r\n      p.createCanvas(width, height).parent('gameContainer');\r\n      p.background(0);\r\n      p.frameRate(10);\r\n      snake = new Snake(p);\r\n      food = new Food(p);\r\n      //sets up listener to enable touch detection\r\n      setupTouch();\r\n    };\r\n  \r\n    //main game loop\r\n    p.draw = () => {\r\n      p.background(0);\r\n      drawEdge();\r\n      if (state == State.START) {\r\n        drawWelcome();\r\n      }\r\n      //if no food was eatten overide previous positions in tail\r\n      if (snake.size === snake.tail.length) {\r\n        for (let i = 0; i < snake.tail.length - 1; i++) {\r\n          snake.tail[i] = snake.tail[i + 1];\r\n        }\r\n      }\r\n      snake.tail[snake.size - 1] = new Coordinate(snake.head.x, snake.head.y);\r\n\r\n      //update snake position depending on direction\r\n      if (snake.direction == Direction.RIGHT) {\r\n        snake.head.x += snake.velocity*snake.scale\r\n      } else if (snake.direction == Direction.LEFT) {\r\n        snake.head.x -= snake.velocity*snake.scale\r\n      } else if (snake.direction == Direction.UP) {\r\n        snake.head.y -= snake.velocity*snake.scale\r\n      }else if (snake.direction == Direction.DOWN) {\r\n        snake.head.y += snake.velocity*snake.scale\r\n      }\r\n\r\n      snake.head.x = p.constrain(snake.head.x, 0, width - snake.scale);\r\n      snake.head.y = p.constrain(snake.head.y, 40, height - snake.scale);\r\n\r\n      checkCollision();\r\n      drawScore();\r\n      food.drawFood();\r\n      snake.drawSnake();\r\n    };\r\n\r\n    p.keyPressed = () => {\r\n      //record which way the snake is moving and set turn pivot\r\n      document.addEventListener(\"keydown\", arrow_keys_handler, false);\r\n      if (p.keyCode === p.RIGHT_ARROW && snake.direction != Direction.LEFT) {\r\n        if (state == State.START) {\r\n          state = State.PLAYING;\r\n        }\r\n        snake.direction = Direction.RIGHT;\r\n      } else if (p.keyCode === p.LEFT_ARROW && snake.direction != Direction.RIGHT) {\r\n        if (state == State.START) {\r\n          state = State.PLAYING;\r\n        }\r\n        snake.direction = Direction.LEFT;\r\n      } else if (p.keyCode === p.DOWN_ARROW && snake.direction != Direction.UP) {\r\n        if (state == State.START) {\r\n          state = State.PLAYING;\r\n        }\r\n        snake.direction = Direction.DOWN;\r\n      } else if (p.keyCode === p.UP_ARROW && snake.direction != Direction.DOWN) {\r\n        if (state == State.START) {\r\n          state = State.PLAYING;\r\n        }\r\n        snake.direction = Direction.UP;\r\n      }\r\n    }\r\n\r\n    p.windowResized = () => {\r\n      width = document.getElementById('gameContainer').offsetWidth;\r\n      height = width;\r\n      p.resizeCanvas(width, height);\r\n    }\r\n\r\n    //this method checks for collisions with food as well as collisions with the snake itself.\r\n    let checkCollision = () => {\r\n      if (p.dist(snake.head.x, snake.head.y, food.coordinates.x, food.coordinates.y) < 5) {\r\n            snake.eatFood();\r\n            food.reposition();\r\n      }\r\n      snake.tail.forEach(\r\n        (part: Coordinate) => {\r\n          if (p.dist(snake.head.x, snake.head.y, part.x, part.y) < 5) {\r\n            p.setup();\r\n          }\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n    let drawScore = () => {\r\n      p.fill(snake.SNAKE_COLOR);\r\n      p.textSize(40);\r\n      p.textAlign(p.LEFT);\r\n      p.text(\"Score: \" + snake.size, 10, 35);\r\n    }\r\n\r\n    let drawEdge = () => {\r\n      p.stroke(255);\r\n      p.line(0, 40, p.width, 40);\r\n      p.stroke(0);\r\n    }\r\n\r\n    let drawWelcome = () => {\r\n      p.fill(255);\r\n      p.textSize(30)\r\n      p.textAlign(p.CENTER);\r\n      p.text(\"Press the arrow keys to start playing!\", p.width / 2, 85)\r\n    }\r\n\r\n    let arrow_keys_handler = (e) => {\r\n      switch(e.keyCode){\r\n          case 37: case 39: case 38:  case 40: // Arrow keys\r\n          case 32: e.preventDefault(); break; // Space\r\n          default: break; // do not block other keys\r\n      }\r\n    };\r\n\r\n    let setupTouch = () => {\r\n      hammer.on('swipe', (event) => {\r\n        if (event.direction == Direction.LEFT && snake.direction != Direction.RIGHT) {\r\n          if (state == State.START) {\r\n            state = State.PLAYING;\r\n          }\r\n          snake.direction = Direction.LEFT;\r\n        } else if (event.direction == Direction.RIGHT && snake.direction != Direction.LEFT) {\r\n          if (state == State.START) {\r\n            state = State.PLAYING;\r\n          }\r\n          snake.direction = Direction.RIGHT;\r\n        } else if (event.direction == Direction.UP && snake.direction != Direction.DOWN) {\r\n          if (state == State.START) {\r\n            state = State.PLAYING;\r\n          }\r\n          snake.direction = Direction.UP;\r\n        } else if (event.direction == Direction.DOWN && snake.direction != Direction.UP) {\r\n          if (state == State.START) {\r\n            state = State.PLAYING;\r\n          }\r\n          snake.direction = Direction.DOWN;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';  \r\nimport { AccordionModule } from 'ngx-bootstrap/accordion'  \r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';  \r\nimport { ModalModule } from 'ngx-bootstrap/modal';  \r\nimport { TabsModule } from 'ngx-bootstrap/tabs';  \r\n  \r\n@NgModule({  \r\n    imports: [AccordionModule.forRoot(), BsDropdownModule.forRoot(), ModalModule.forRoot(), TabsModule.forRoot()],  \r\n    exports: [AccordionModule, BsDropdownModule, ModalModule, TabsModule],  \r\n    declarations: [],  \r\n    providers: []  \r\n})  \r\n  \r\nexport class SharedBootstrapModule {  \r\n  \r\n}  ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}